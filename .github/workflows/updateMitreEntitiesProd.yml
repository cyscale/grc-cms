name: Update Prod Mitre Entities

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Update Prod Mitre Entities
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login
        uses: azure/login@v1
        with:
          subscription-id: ${{ vars.AZ_SUBSCRIPTION_ID }}
          tenant-id: ${{ vars.AZ_TENANT_ID }}
          client-id: ${{ vars.AZ_CLIENT_ID }}
      - name: Deploy
        uses: azure/cli@v1
        with:
          azcliversion: 2.37.0
          inlineScript: |
            # Handle MITRE tactics
            for file in ./mitre/tactics/*.json; do
              mid=$(cat $file | jq -r '.mid') || continue
              message=$(jq --null-input --arg blob $file --arg mid $mid --arg type "tactic" --arg operation "modified" '{"blob": $blob, "mid": $mid, "type": "tactic", "operation": $operation}') || continue

              az storage blob upload -c grc --file $file --name $file --overwrite --metadata slug=$slug --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login || continue
              az storage message put -q mitre-events --content "$(echo $message | tr -d '\r\n' | base64)" --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login || continue
            done


            # Handle MITRE techniques
            for file in ./mitre/techniques/*.json; do
              mid=$(cat $file | jq -r '.mid') || continue
              message=$(jq --null-input --arg blob $file --arg mid $mid --arg type "technique" --arg operation "modified" '{"blob": $blob, "mid": $mid, "type": "technique", "operation": $operation}') || continue

              az storage blob upload -c grc --file $file --name $file --overwrite --metadata slug=$slug --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login || continue
              az storage message put -q mitre-events --content "$(echo $message | tr -d '\r\n' | base64)" --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login || continue
            done

            # Handle MITRE mappings
            for file in ./mitre/mappings/*.json; do
              mid=$(cat $file | jq -r '.mid') || continue
              message=$(jq --null-input --arg blob $file --arg mid $mid --arg type "mapping" --arg operation "modified" '{"blob": $blob, "mid": $mid, "type": "mapping", "operation": $operation}') || continue

              az storage blob upload -c grc --file $file --name $file --overwrite --metadata slug=$slug --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login || continue
              az storage message put -q mitre-events --content "$(echo $message | tr -d '\r\n' | base64)" --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login || continue
            done
