name: Deploy to dev

on:
  push:
    branches:
      - dev

permissions:
  id-token: write
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy GRC to dev
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get GRC changed queries
        id: grc-changed-queries
        uses: tj-actions/changed-files@v41
        with:
          files: |
            queries/**
      - name: Get GRC changed controls
        id: grc-changed-controls
        uses: tj-actions/changed-files@v41
        with:
          files: |
            controls/**
      - name: Get GRC changed policies
        id: grc-changed-policies
        uses: tj-actions/changed-files@v41
        with:
          files: |
            policies/**
      - name: Get MITRE changed tactics
        id: mitre-changed-tactics
        uses: tj-actions/changed-files@v41
        with:
          files: |
            mitre/tactics/**
      - name: Get MITRE changed techniques
        id: mitre-changed-techniques
        uses: tj-actions/changed-files@v41
        with:
          files: |
            mitre/techniques/**
      - name: Get MITRE changed mappings
        id: mitre-changed-mappings
        uses: tj-actions/changed-files@v41
        with:
          files: |
            mitre/mappings/**
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.GRC_CMS_UPLOAD_ROLE_ARN }}
          aws-region: ${{ vars.GRC_BUCKET_REGION }}
      - name: Deploy
        with:
          azcliversion: 2.68.0
          inlineScript: |
            # Handle GRC queries
            for file in ${{ steps.grc-changed-queries.outputs.all_changed_files }}; do
              aws s3 cp $file/ s3://${{ secrets.S3_BUCKET_NAME }}/$file/
            done

            for file in ${{ steps.grc-changed-queries.outputs.deleted_files }}; do
              aws s3 rm s3://${{ secrets.S3_BUCKET_NAME }}/$file/
            done

#            # Handle GRC controls
#            for file in ${{ steps.grc-changed-controls.outputs.all_changed_files }}; do
#              aws s3 cp $file/ s3://${{ secrets.S3_BUCKET_NAME }}/$file/
#            done
#
#            for file in ${{ steps.grc-changed-controls.outputs.deleted_files }}; do
#              az storage blob delete -c grc --name $file --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login
#            done
#
#            # Handle GRC policies
#            for file in ${{ steps.grc-changed-policies.outputs.all_changed_files }}; do
#              aws s3 cp $file/ s3://${{ secrets.S3_BUCKET_NAME }}/$file/
#            done
#
#            for file in ${{ steps.grc-changed-policies.outputs.deleted_files }}; do
#              az storage blob delete -c grc --name $file --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login
#            done
#
#            # Handle MITRE tactics
#            for file in ${{ steps.mitre-changed-tactics.outputs.all_changed_files }}; do
#              aws s3 cp $file/ s3://${{ secrets.S3_BUCKET_NAME }}/$file/
#            done
#
#            for file in ${{ steps.mitre-changed-tactics.outputs.deleted_files }}; do
#              az storage blob delete -c grc --name $file --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login
#            done
#
#            # Handle MITRE techniques
#            for file in ${{ steps.mitre-changed-techniques.outputs.all_changed_files }}; do
#              aws s3 cp $file/ s3://${{ secrets.S3_BUCKET_NAME }}/$file/
#            done
#
#            for file in ${{ steps.mitre-changed-techniques.outputs.deleted_files }}; do
#              az storage blob delete -c grc --name $file --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login
#            done
#
#            # Handle MITRE mappings
#            for file in ${{ steps.mitre-changed-mappings.outputs.all_changed_files }}; do
#              aaws s3 cp $file/ s3://${{ secrets.S3_BUCKET_NAME }}/$file/
#            done
#
#            for file in ${{ steps.mitre-changed-mappings.outputs.deleted_files }}; do
#              az storage blob delete -c grc --name $file --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode login
#            done
#
#            rm -f entity.json
