{
  "enabled": true,
  "name": "CIS Kubernetes Benchmark",
  "isStandard": true,
  "slug": "cis-kubernetes-1-8-0",
  "version": "1.8.0",
  "body": "### Statement\n\nAll CIS Benchmarks focus on technical configuration settings used to maintain and/or increase the security of the addressed technology, and they should be used in conjunction with other essential cyber hygiene tasks like:\n\n• Monitoring the base operating system for vulnerabilities and quickly updating with the latest security patches\n\n• Monitoring applications and libraries for vulnerabilities and quickly updating with the latest security patches\nIn the end, the CIS Benchmarks are designed as a key component of a comprehensive\ncybersecurity program. \n\nThis framework provides prescriptive guidance for establishing a secure configuration posture for Kubernetes v1.27.\n\n### Special note\n\nThe set of configuration files mentioned anywhere throughout this benchmark document may vary according to the deployment tool and the platform. Any reference to a configuration file should be modified according to the actual configuration\nfiles used on the specific deployment.\n\nFor example, the configuration file for the Kubernetes API server installed by the\nkubeadm tool may be found in /etc/kubernetes/manifests/kube-apiserver.yaml, but\nthe same file may be called /etc/kubernetes/manifests/kube-apiserver.manifest\nwhen installed by kops or kubespray.\n\n## Recommendations\n\n### 1 Control plane configurations \n\nThis section consists of security recommendations for the direct configuration of\nKubernetes control plane processes. These recommendations may not be directly applicable for cluster operators in environments where these components are managed\nby a 3rd party.\n\n<Procedure slug=\"k8s-1-1-control-plane-config-files\"/>\n<Procedure slug=\"k8s-1-2-api-server\"/>\n<Procedure slug=\"k8s-1-3-controller-manager\"/>\n<Procedure slug=\"k8s-1-4-scheduler\"/>\n\n### 4 Worker Nodes\n\nThis section consists of security recommendations for the components that run on\nKubernetes worker nodes.\nNote that these components may also run on Kubernetes master nodes, so the recommendations in this section should be applied to master nodes as well as worker\nnodes where the master nodes make use of these components.\n\n<Procedure slug=\"k8s-4-1-kubelet\"/>\n\n### 5 Policies\n\nThis section contains recommendations for various Kubernetes policies which are\nimportant to the security of the environment.\n\n<Procedure slug=\"k8s-5-1-rbac-service-accounts\"/>\n<Procedure slug=\"k8s-5-2-pod-security\"/>\n<Procedure slug=\"k8s-5-3-network-policies-and-cni\"/>\n<Procedure slug=\"k8s-5-4-secrets-management\"/>\n<Procedure slug=\"k8s-5-7-general-policies\"/>\n\n",
  "targetCloudProviders": [
    "k8s"
  ],
  "procedures": [
    {
      "slug": "k8s-1-2-api-server",
      "name": "1.2 API Server",
      "controls": [
        {
          "control": "k8s-anonymous-auth-argument"
        },
        {
          "control": "k8s-token-auth-file-parameter"
        },
        {
          "control": "k8s-encryption-provider-config-argument"
        },
        {
          "control": "k8s-strong-crypto-ciphers-apiserver"
        },
        {
          "control": "k8s-service-account-lookup-argument"
        },
        {
          "control": "k8s-service-account-key-file-argument"
        }
      ],
      "body": "This section contains recommendations relating to API server configuration flags."
    },
    {
      "body": "This section contains recommendations relating to Controller Manager configuration flags.",
      "slug": "k8s-1-3-controller-manager",
      "name": "1.3 Controller Manager",
      "controls": [
        {
          "control": "k8s-root-ca-file-argument"
        },
        {
          "control": "k8s-rotatekubeletservercertificate-argument"
        },
        {
          "control": "k8s-bind-address-controller-manager-argument"
        },
        {
          "control": "k8s-user-service-account-credentials-argument"
        }
      ]
    },
    {
      "slug": "k8s-1-4-scheduler",
      "name": "1.4 Scheduler",
      "body": "This section contains recommendations relating to Scheduler configuration flags.",
      "controls": [
        {
          "control": "k8s-bind-address-scheduler-argument"
        }
      ]
    },
    {
      "slug": "k8s-4-1-kubelet",
      "name": "4.2 Kubelet",
      "body": "This section contains recommendations for kubelet configuration.\n\nKubelet settings may be configured using arguments on the running kubelet executable, or they may be taken from a Kubelet config file. If both are specified, the executable argument takes precedence.\n\nTo find the Kubelet config file, run the following command:\n\n`ps -ef | grep kubelet | grep config`\n\nIf the `--config` argument is present, this gives the location of the Kubelet config file. This config file could be in JSON or YAML format depending on your distribution.",
      "controls": [
        {
          "control": "k8s-kubelet-anonymous-auth-argument"
        },
        {
          "control": "k8s-kubelet-rotate-certificate-false"
        },
        {
          "control": "k8s-kubelet-rotatekubeletservercertificate-argument"
        }
      ]
    },
    {
      "slug": "k8s-5-1-rbac-service-accounts",
      "name": "5.1 RBAC and Service Accounts",
      "controls": [
        {
          "control": "k8s-cluster-admin-role-usage"
        },
        {
          "control": "k8s-minimize-access-to-secrets"
        },
        {
          "control": "k8s-minimize-wildcard-use-in-roles-and-clusterroles"
        },
        {
          "control": "k8s-minimize-access-to-create-pods"
        },
        {
          "control": "k8s-service-account-default"
        },
        {
          "control": "k8s-ensure-service-account-tokens-are-only-mounted-where-necessary"
        },
        {
          "control": "k8s-limit-use-of-bind-impersonate-and-escalate-in-permissions"
        }
      ]
    },
    {
      "slug": "k8s-5-2-pod-security",
      "name": "5.2 Pod Security Standards",
      "body": "Pod Security Standards (PSS) are recommendations for securing deployed workloads to reduce the risks of container breakout. There are a number of ways if implementing PSS, including the built-in Pod Security Admission controller, or external policy control systems which integrate with Kubernetes via validating and mutating webhooks.",
      "controls": [
        {
          "control": "k8s-pod-admission-privileged-containers"
        },
        {
          "control": "k8s-minimize-the-admission-of-containers-whishing-to-share-the-hostpid"
        },
        {
          "control": "k8s-do-not-generally-permit-containers-to-be-run-with-the-hostipc-flag-set-to-true"
        },
        {
          "control": "k8s-minimize-admission-of-containers-wishing-to-share-the-host-network-namespace"
        },
        {
          "control": "k8s-pod-admission-allow-privilege-escalation"
        },
        {
          "control": "k8s-pod-admission-host-path"
        },
        {
          "control": "k8s-pod-admission-host-ports"
        }
      ]
    },
    {
      "name": "5.3 Network Policies and CNI",
      "slug": "k8s-5-3-network-policies-and-cni",
      "controls": [
        {
          "control": "k8s-namespaces-without-network-policies"
        }
      ]
    },
    {
      "name": "5.4 Secrets Management",
      "slug": "k8s-5-4-secrets-management",
      "controls": [
        {
          "control": "k8s-prefer-using-secrets-as-files-over-secrets-as-env-var"
        },
        {
          "control": "k8s-use-external-secret-storage"
        }
      ]
    },
    {
      "name": "5.7 General Policies",
      "slug": "k8s-5-7-general-policies",
      "controls": [
        {
          "control": "k8s-apply-security-context-correctly-to-pods-and-containers"
        },
        {
          "control": "k8s-the-default-namespace-should-not-be-used"
        }
      ]
    }
  ]
}