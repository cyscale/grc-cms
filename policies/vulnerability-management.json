{"name":"Vulnerability Management","slug":"vulnerability-management","body":"## Policy Statement\n\n**Vulnerability:** a weakness or system flaw that renders the system open for attack thus reducing its information security assurance. A vulnerability can be found in proprietary developed software, open-source software, system, or process.\n\nThis policy details the vulnerability management procedures and guidelines required to maintain a high level of system and application security in a diverse IT and Cloud environment. It outlines a comprehensive and integrated program to detect and remediate vulnerabilities in operating systems, applications, source code, open-source software, mobile devices, cloud resources, and network devices.\n\n### Responsibles and Service Levels\n\nA key element of Incident response planning is to identify the key personnel both internally and externally that is able to deal with all incident response scenarios, including the case of vulnerability discovery.\n\n- Head of Engineering – the owner of the vulnerability;\n- CISO and Compliance officer – responsible for reviewing scan results. These roles should decide whether identified vulnerabilities are mitigated or their associated risks are accepted;\n- CloudOps/DevOps Lead – responsible for scheduling and coordinating remediation actions.\n\n#### Service Levels\n\n| Priority  | Severity Level                            | SLA       | Description                       |\n|-----------|-------------------------------------------|-----------|-----------------------------------|\n| **P0**    | Critical (we will not exist as a company) | 1 Day     | CVSS score \u003e= 8.0, can be readily compromised with publicly available tooling, malware, or exploits |\n| **P1**    | High (improve and secure how we operate)  | 3 Days    | CVSS score \u003e= 8.0 or are given a high severity rating by standards such as PCI DSS v3. There is no known public malware or exploit available |\n| P2        | Medium                                    | 30 Days   | CVSS score of 6.0 to 8.0 and can be mitigated within an extended time frame |\n| P2        | Low                                       | 90 Days   | CVSS score of \u003c 6.0, to be documented and properly excluded if it cannot be remediated |\n\n#### Assessment Schedule\n\n| Assessment Type                           | Frequency of Testing  |\n|-------------------------------------------|-----------------------|\n| Perimeter Vulnerability Assessment (PVA)  | Annually              |\n| Internal Vulnerability Scan (IVS)         | Quarterly             |\n| Web Application Assessments               | Quarterly             |\n| Network Security Assessment (NSA)         | Quarterly             |\n| Wireless Security Assessment (WSA)        | Annually              |\n| Application Security Assessment           | Quarterly             |\n| Security Test and Evaluation              | Pre-Production        |\n| Unauthorized Components/Devices Scan      | Weekly                |\n\n## Procedures\n\n\u003cProcedure slug=\"vulnerability-discovery\"/\u003e\n\u003cProcedure slug=\"vulnerability-evaluation\"/\u003e\n\u003cProcedure slug=\"vulnerability-prioritization\"/\u003e\n\u003cProcedure slug=\"vulnerability-reporting\"/\u003e\n\u003cProcedure slug=\"vulnerability-remediation\"/\u003e\n\u003cProcedure slug=\"vulnerability-validation\"/\u003e\n\n","version":"1","isStandard":false,"enabled":true,"procedures":[{"name":"Discovery (indetification)","slug":"vulnerability-discovery","body":"The following tools may be used to assess systems or applications for vulnerabilities:\n\n- Cloud Service Providers agents (installed in certified and hardened compute resources, containers, and cloud functions)\n- OWASP ZAP\n- Burp Suite\n- Tenable\n- Qualys\n- Netsparker\n- NMAP\n\nActivities:\n\n- Scan network-accessible systems by pinging them or sending them TCP/UDP packets\n- Identify open ports and services running on scanned systems\n- If possible, remotely log in to systems to gather detailed system information\n- Correlate system information with known vulnerabilities and map those to assets using databases such as:\n  - VulnDB\n  - NIST NVD (National Vulnerability Database)\n  - MITRE CVE\n\n#### Penetration Testing\n\nPerformed regularly as part of this policy, it helps in the discovery phase. \u003cVar keyName=\"companyName\"/\u003e uses a bug bounty program run by [HackerOne](https://hackerone.com). Also, certified 3rd Party penetration testing is performed annually.","controls":null},{"name":"Evaluation","slug":"vulnerability-evaluation","body":"After vulnerabilities are identified, they need to be evaluated so the risks posed by them are dealt with appropriately and under the organization's risk management strategy.\n\nCriteria to consider when evaluating vulnerabilities:\n\n- How difficult is it to exploit this vulnerability?\n- Could someone directly exploit this vulnerability from the Internet?\n- Is there known, published exploit code for this vulnerability?\n- What would be the impact on the business if this vulnerability were exploited?\n- How old is the vulnerability/how long has it been on the network?","controls":null},{"name":"Prioritization","slug":"vulnerability-prioritization","body":"- Application and system owners should prioritize system or application vulnerabilities based on the findings and public vulnerability databases;\n- Application and system owners must address network security policy configurations, content security policy configurations, application header configurations, or certificate configurations (e.g., self-signed, weak encryption) findings;\n- The result of this step is to attach a Priority level to each identified vulnerability.","controls":null},{"name":"Reporting","slug":"vulnerability-reporting","body":"\u003cVar keyName=\"companyName\"/\u003e uses a ticketing solution to report vulnerabilities and track their remediation. The ticket reporter must fill out special fields which are preconfigured depending on project type, such as:\n\n  - *Title:* example: `[Critical] Production app uses buggy connector to the database`\n  - *Issue type:* Vulnerability or Finding\n  - *Priority Level* - see above convention\n  - *Severity Level* - see above convention\n  - *Environment:* development, testing, production\n  - *Location:* Application Name, Repository Name, Sofware Component, etc.\n  - *Version* - as number in [Semantic Versioning (SemVer)](https://semver.org/) format\n  - *Description:* describe the vulnerability","controls":null},{"name":"Remediation","slug":"vulnerability-remediation","body":"System and application owners must do one or more of the following:\n\n- Deploy mitigating control with CISO/COO approval\n- Deploy patches/fixes that mitigate the risk for that vulnerability\n- Upgrade any outdated packages\n- Deploy configuration changes (if needed)\n- Address vulnerabilities in time based on the  SLA\n- Production environments should not operate with unresolved *Critical* or *High* vulnerabilities","controls":null},{"name":"Validation","slug":"vulnerability-validation","body":"- Determine if the vulnerability is a false positive (mitigation control has been implemented)\n- The application or system owner is responsible to let the CISO know via email in case of false positive\n- System and applications owners must confirm the vulnerability no longer appears within the discovery tool\n- If remediation has taken place, and the change is not reflected in a validation scan or deemed not applicable to the system, the application or system owner is responsible to let the CISO know via email\n- After implementation, the ticket should be reassigned to the reporter\n- In case of identification, if a mitigation control is efficient, but cannot be implemented at this moment (e.g. production environment cannot take a change at the moment), an upgrade window must be scheduled for the fix/remediation to be deployed\n- After implementation and validation, the ticket must be closed by the reporter","controls":null}]}