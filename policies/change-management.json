{"name":"Change Management","slug":"change-management","body":"## Policy Statement\n\nChange is an essential part of the modern business environment and an effective supporting IT organization has to manage the implications of any change that sets it apart from others. Whether the change is proactive to move us forwards or reactive to adapt to incidents, problems, or external events such as new legislation, it will inevitably carry an element of risk with it.\n\n\u003cVar keyName=\"companyName\"/\u003e automates configuration management using automation (scripts, RPA, bots). Changes to production systems and networks are always logged. \u003cVar keyName=\"companyName\"/\u003e uses Terraform to automatically configure IT systems.\n\nSpecial care is required for **Production Environments**. All Production changes must be fully tested, have adequate approval, and be fully recoverable with automatic rollbacks in case of failure.\n\n#### Scope\n\nChanges to the \u003cVar keyName=\"companyName\"/\u003e information technology environment that may cause:\n\n- Infrastructure elements:\n  - A service to be down, or degraded;\n  - A change in the functionality of a service, or introduce a new service;\n  - An infrastructure configuration change.\n- Software elements:\n  - Includes design and code changes related to service epics and user stories;\n  - Defect fixes originating from testing/quality assurance;\n  - Adhoc requirements changes.\n\n### Objectives\n\nThe objectives of the change management process are to:\n\n- Manage the assessment and implementation of changes to the IT environment following the business requirements and risk appetite of the organization;\n- Ensure that the Configuration Management Systems (CMS) remains up to date in the face of frequent and varying changes;\n- Keep accurate records of changes made and the configuration items affected by them, for use in other processes such as incident and problem management;\n- Provide benefit to the business by delivering desirable change whilst preventing undesirable change.\n\n## Procedures\n\n\u003cProcedure slug=\"change-process\"/\u003e\n\u003cProcedure slug=\"change-promoting\"/\u003e\n\u003cProcedure slug=\"change-infrastructure-network\"/\u003e\n\u003cProcedure slug=\"change-endpoint\"/\u003e\n\u003cProcedure slug=\"change-monitoring\"/\u003e\n\n","version":"1","isStandard":false,"enabled":true,"procedures":[{"name":"Configuration Management Processes","slug":"change-process","body":"1. No systems are deployed into \u003cVar keyName=\"companyName\"/\u003e Production environments without the approval of the CTO;\n1. Production environment changes are reviewed and approved by Security Team before being deployed to production;\n1. Production environment changes are tested before being deployed in production;\n1. Automation is part of the asset management strategy and creates an updated inventory;\n1. Environments and their underlying assets are labeled for production, development, or testing;\n1. [Data Classification](/policies/data-management/show?active=data-classification) labels must be attached to each asset;\n1. During each change implementation, the change is reviewed and verified by the asset owner;\n1. \u003cVar keyName=\"companyName\"/\u003e uses a single source of truth for time-synchronization and uses a pre-approved NTP server. Modifying time data on systems is restricted;\n1. All laptops, workstations, mobile devices, and servers must be hardened based on best-practices, such as:\n   - Windows systems use hardware encryption such as BitLocker\n   - Linux systems use only hardened and approved distributions\n   - GCP VMs are provisioned using only hardened and approved images\n   - AWS EC2 instances are provisioned using only hardened and approved images (AMI)\n   - Mobile Devices are checked to ensure proper patching and up-to-date system updates. \u003cVar keyName=\"companyName\"/\u003e uses:\n     - *AirWatch from VMWare- for MDM (iOS and Android)\n     - *Microsoft Intune- for Windows systems\n     - *Jamf- for macOS systems\n   - Docker Containers are launched using only Docker images which have been signed and validated by the Security Team\n   - Docker images are secured in the CI/CD pipelines and stored in the Container Registry. \u003cVar keyName=\"companyName\"/\u003e uses *Anchore- and *Clair- for scanning and validating Docker images.","controls":null},{"name":"Promoting code to Production","slug":"change-promoting","body":"\u003cVar keyName=\"companyName\"/\u003e uses a CMS to track change requests. Changes and approvals are managed following these steps:\n\n- Approval is required for each change request. \u003cVar keyName=\"companyName\"/\u003e's approver is the CTO;\n- Change requests must be written with the following details:\n    - Description\n    - Change reason\n    - Affected systems, applications, and data\n    - Version (for code, image, deployment, etc.)\n    - Security scan status and results\n    - Production environment, such as `gcp-companyName-prod`\n\nMore info can be found in the [Software Release and Deployment Management Policy](/policies/software-release-deployment/show)","controls":null},{"name":"Infrastructure and Network Change","slug":"change-infrastructure-network","body":"- Default configurations are to be changed for hardening reasons;\n- Default passwords/passphrases;\n- Default encryption keys must be changed;\n- Passwords and encryption keys must be automatically rotated on a regular basis and changed if they are known by employees or 3rd Parties that cease to work with \u003cVar keyName=\"companyName\"/\u003e;\n- Firewall rules, traffic monitoring, network flow must be enabled and preserved for auditing.\n\nConfigurations are stored and versioned using Infrastructure as Code (IaC), and any changes to this configuration must follow the approval steps before being considered suitable as a bootstrap project for the production infrastructure.","controls":null},{"name":"Endpoint Configuration Change","slug":"change-endpoint","body":"1. Laptops, workstations, and mobile devices are configured by IT or by the device owner. \u003cVar keyName=\"companyName\"/\u003e also uses an automatic system (VMWare AirWatch or Microsoft Intune) to manage configuration and handle changes to these endpoints. Each endpoint must have:\n\n   - *Personal* or *Company* label - important for management and remote triggers such as **Data Wiping** or **Lost Mode** activation\n   - Disk encryption  - specific for that operating system\n   - Approved NTP servers\n   - Strong passwords based on \u003cVar keyName=\"companyName\"/\u003e [Password Management Policy](/policies/password-management/show)\n   - Automatic system locking after 5 mins of inactivity\n   - Auto-update (at least for security patches)\n\n1. Automated compliance checks are performed regularly to ensure the proper configuration of these endpoints.","controls":null},{"name":"Monitoring and Auditing","slug":"change-monitoring","body":"Configuration auditing has the objective of detecting and alerting on deviations from standards, misconfigurations, or anything suspicious regarding production environment changes.\n\n#### Roles\n\n**Change Requestor**\n- Raises the request for change\n- Documents the request and indicates the service and/or systems impacted by the change\n- Primarily part of the IT or development teams, but project managers can also enter requests on behalf of members of their project teams\n\n**Change Manager (CM)**\n- Manages the change request process\n- Facilitates review and triage of change requests, and assessment of risk level\n- Determine the need for additional information\n- Approval to move into the planning stage\n\n**Change Advisory Board (CAB)**\n- Meets daily\n- Review and triage of change requests, and assessment of risk level\n- Determine the need for additional information\n- Review and authorize Standard change requests\n- Review and authorize Normal change requests with a higher level of risk or impact\n- Review and authorize Emergency change requests, as needed\n- Approval of request to move into the planning stage\n- Approval of request to move into the implementation stage\n\n**Change implementation team**\n- Resources that implement changes\n- Update the request and document the work completed as part of the request\n\n#### Type of Changes\n\n**Standard**\n- Routine changes, risks are known, and minimal impact\n- Change advisory board reviews and approves, or rejects\n\n**Normal**\n- Require change process approval due to higher risk or impact\n- Non-standard and non-emergency changes that require change management review\n- Change requests are reviewed by the change advisory board (CAB) and approved or rejected (e.g. require more information)\n\n**Emergency**\n- Unexpected issues that need to be addressed immediately. E.g. system down, security threat, etc.\n- Change advisory board is notified of risk and impact and meets, as needed, to review and advise the implementation teams\n- Change advisory board works with the implementation and development teams, as needed\n\n**Major**\n- Requires the removal or decommissioning of a service\n- Involves the transfer of service from \u003cVar keyName=\"companyName\"/\u003e to another business or a third-party\n- Creates a new service\n- Requires more than 5 days of IT resource\n\n#### Examples of changes in scope\n\nThe following are examples of recently implemented or planned changes that will in the future require a change request to be raised and approved:\n\n- Changes to AWS infrastructure\n- Changes to interfaces that include parameters that get passed to/from an API\n- Changes to database schema (E.g.: Physical database changes including updates of columns etc.)\n- Changes to the  analytics engine\n- Changes that involve customer journeys/customer experience through the UI\n- Changes to the UI (E.g.: Graph Database changes)\n\n### Examples of changes out of scope\n\nThe following are examples of tasks that are considered to be service requests or administrative tasks and so will not require a change request to be raised and approved:\n\n- Creating a new user\n- Changing a user's password (password reset)\n- Mapping a drive for a user\n- Installing individual new PCs\n- Upgrading memory in an individual PC\n- Installing software on a user's desktop\n\n#### Change Management Tools\n\nSeveral key software tools underpin an effective change management process. These are subject to change as requirements and technology are updated and so specific systems are not described here. However, the main types of tools that play a significant part in the process within \u003cVar keyName=\"companyName\"/\u003e are as follows.\n\n**Change Management System**\n\nThe change management system is a workflow system that allows the logging of RFCs directly into the process via a web interface and a desktop client. Changes are then managed and directed according to the defined process, under the control of the change manager. Tasks can be assigned to individual users for change assessment and authorization and later on for change building, testing and implementation.\n\nResults of all reviews can be recorded as notes within the system, along with pre-defined information at each stage of the process. Supporting information such as test and back-out plans may be attached to change records and accessed by those involved in the process for that specific change.\n\n**Configuration Management Database**\n\nThe configuration management system provides the capability to link changes with the configuration items they affect, building up a change history for CIs such as servers, databases, and applications. This is useful in incident management where a particular incident may be traced back to a change made at an earlier date.\n\nThe status and version of CIs may be updated as the change management process progresses so that an accurate picture of the organization's infrastructure is maintained at all times, even in the face of frequent change.\n\n**Release Management System – CI/CD + Container Registry**\n\nThe Release Management system within \u003cVar keyName=\"companyName\"/\u003e provides automated build capabilities and (Docker) Container Registry – the storage place for deployables that are later deployed into infrastructure dynamically as containers.\n\nThe Container Registry also maintains limited information on versioning of deployable which could be reverted at a later point in time if needed by rolling back changes in a Kubernetes Cluster.","controls":null}]}