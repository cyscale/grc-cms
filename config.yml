backend:
  name: github
  branch: main
  repo: cyscale/grc-cms
  site_domain: cyscale-grc-cms.netlify.app

media_folder: media

# publish_mode: editorial_workflow

collections:
  - name: queries
    label: Queries
    label_singular: Query
    folder: queries
    create: true
    extension: json
    slug: '{{fields.slug}}'
    fields:
      - { name: 'name', label: 'Name', widget: 'string' }
      - { name: 'slug', label: 'Slug', widget: 'string' }
      - { name: 'query', label: 'Query', widget: 'query', hint: 'You should copy-paste the final query from the Sandbox' }
  - name: controls
    label: Controls
    label_singular: Control
    folder: controls
    create: true
    editor:
      preview: false
    extension: json
    slug: '{{fields.slug}}'
    fields:
      - { name: 'name', label: 'Title', widget: 'string' }
      - { name: 'description', label: 'Issue Description', widget: 'string' }
      - { name: 'slug', label: 'Slug', widget: 'string' }
      - { name: 'body', label: 'Body', widget: 'markdown', modes: ['raw'] }
      - label: 'Severity'
        name: 'severity'
        widget: 'select'
        options:
          - { label: 'Low', value: 1 }
          - { label: 'Medium', value: 2 }
          - { label: 'High', value: 3 }
      - name: 'remediationDescription'
        label: 'Remediation'
        widget: 'markdown'
        modes: ['raw']
      - label: 'Rules'
        name: 'rules'
        widget: 'list'
        summary: '{{fields.query.slug}}'
        fields:
          - label: 'Cloud Providers'
            name: 'cloudProviders'
            widget: 'select'
            multiple: true
            options:
              - { label: 'AWS', value: 'aws' }
              - { label: 'Azure', value: 'azure' }
              - { label: 'Alibaba', value: 'alibaba' }
              - { label: 'GCP', value: 'gcp' }
              - { label: 'Okta', value: 'okta' }
          - label: 'Comparator'
            name: 'comparator'
            widget: 'select'
            options:
              - { label: 'Equal', value: 'eq' }
              - { label: 'Not equal', value: 'neq' }
          - label: 'Expected result'
            name: 'expectedResult'
            widget: 'select'
            options:
              - { label: 'Empty array', value: '[]' }
              - { label: 'True', value: 'true' }
              - { label: 'False', value: 'false' }
          - label: 'Subjects'
            name: 'subjects'
            widget: 'select'
            multiple: true
            options:
              [
                'AutoProvisioningSetting',
                'BigQueryTable',
                'BlobContainer',
                'Bucket',
                'CloudSQLInstance',
                'Cluster',
                'ConfigurationRecorder',
                'DBCluster',
                'DBInstance',
                'Disk',
                'Domain',
                'FirewallRule',
                'FlowLog',
                'Function',
                'HTTPListener',
                'IAMAccountSummary',
                'IAMCustomRole',
                'IAMGroup',
                'IAMPasswordPolicy',
                'IAMPolicy',
                'IAMRole',
                'IAMServerCertificate',
                'IAMServiceAccount',
                'IAMServiceAccountKey',
                'IAMUser',
                'Image',
                'KMSKey',
                'KMSSecret',
                'KMSVault',
                'KinesisDataStream',
                'LoadBalancer',
                'LogBucket',
                'LogProfile',
                'ManagedZone',
                'MySQLServer',
                'MySQLFlexibleServer',
                'NetworkACL',
                'NetworkInterface',
                'NetworkWatcher',
                'PasswordPolicy',
                'Policy',
                'PostgreSQLServer',
                'PostgreSQLFlexibleServer',
                'Pricing',
                'Project',
                'SNSTopic',
                'SQLDatabase',
                'SQLServer',
                'SQLUser',
                'SecurityContact',
                'SecurityGroup',
                'Site',
                'StorageAccount',
                'SubscriptionDiagnosticSetting',
                'TargetHTTPSProxy',
                'TargetSSLProxy',
                'Trail',
                'User',
                'VM',
                'VPC',
              ]
          - label: 'Query'
            name: 'query'
            widget: 'relation'
            collection: 'queries'
            search_fields: ['slug', 'name']
            value_field: '{{slug}}'
            display_fields: ['{{slug}}: {{name}}']
          - label: 'Return path'
            name: 'returnPath'
            widget: 'string'
            hint: 'List of object keys separated by dots. e.g. `hasIAMRoles.hasIAMPolicy.hasIAMPolicyStatement`'
  - name: policies
    label: Policies & Standards
    label_singular: Policy
    folder: policies
    create: true
    editor:
      preview: false
    extension: json
    slug: '{{fields.slug}}'
    fields:
      - { name: 'name', label: 'Name', widget: 'string' }
      - { name: 'isStandard', label: 'Standard', widget: 'boolean' }
      - { name: 'enabled', label: 'Enabled', widget: 'boolean', default: true }
      - { name: 'slug', label: 'Slug', widget: 'string' }
      - { name: 'version', label: 'Version', widget: 'string' }
      - { name: 'body', label: 'Body', widget: 'markdown', modes: ['raw'] }
      - label: 'Procedures'
        name: 'procedures'
        widget: 'list'
        summary: '{{fields.name}}'
        fields:
          - { name: 'name', label: 'Name', widget: 'string' }
          - { name: 'slug', label: 'Slug', widget: 'string' }
          - { name: 'body', label: 'Body', widget: 'markdown', modes: ['raw'] }
          - label: 'Controls'
            name: 'controls'
            widget: 'list'
            fields:
              - label: 'Control'
                name: 'control'
                widget: 'relation'
                collection: 'controls'
                search_fields: ['slug', 'name']
                value_field: '{{slug}}'
                display_fields: ['{{slug}}: {{name}}']
