{
  "body": "Enable `log_connections` on PostgreSQL Database Servers.\n\n### Rationale\n\nEnabling `log_connections` helps the PostgreSQL Database log attempted connections to the server and successful client authentications. Log data can be used to identify, troubleshoot, and repair configuration errors and sub-optimal performance.\n\n### Default value\n\nBy default, `log_connections` is set to `on` (enabled).",
  "name": "[LEGACY] Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL single server",
  "slug": "azure-log-connections-postgresql-server",
  "isInsight": false,
  "alertForSecondaryOnly": false,
  "rules": [
    {
      "cloudProviders": [
        "azure"
      ],
      "comparator": "eq",
      "expectedResult": "[]",
      "subjects": [
        "PostgreSQLServer"
      ],
      "query": "azure-1-3-0-database-3-4-server-parameter-log-connections-is-set-to-on-for-postgresql-database-server",
      "isManual": false
    }
  ],
  "remediationDescription": "### Remediate from Azure Portal\n\n1. Open the server using the `Open in Azure` button\n1. Under `Settings`, click `Server parameters`.\n1. In the filter bar, type `log_connections`.\n1. Set `log_connections` to `ON`.\n1. Click `Save`.\n\n### Remediate from Azure CLI\n\nUse the below command to update `log_connections` configuration.\n\n```bash\naz postgres server configuration set --resource-group <resourceGroupName> --server-name <serverName> --name log_connections --value on\n```\n\n### Remediate from PowerShell\n\nUse the below command to update `log_connections` configuration.\n\n```powershell\nUpdate-AzPostgreSqlConfiguration -ResourceGroupName <ResourceGroupName> -ServerName <ServerName> -Name log_connections -Value on\n```",
  "isEnabled": true,
  "severity": 2
}
