{
  "body": "> In its original form, this control cannot be audited since SAS tokens are not stored in Azure. Cyscale checks the [SAS expiration policy](https://learn.microsoft.com/en-us/azure/storage/common/sas-expiration-policy?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&bc=%2Fazure%2Fstorage%2Fblobs%2Fbreadcrumb%2Ftoc.json&tabs=azure-portal#about-sas-expiration-policies) for each storage account.\n\nExpire shared access signature tokens within an hour.\n\n### Rationale\n\nA shared access signature (SAS) is a URI that grants restricted access rights to Azure Storage resources. It can be provided to clients who should not be trusted with the storage account key but for whom it may be necessary to delegate access to certain storage account resources. Providing a shared access signature URI to these clients allows them access to a resource for a specified period of time. This time should be set as low as possible, preferably no longer than an hour.\n\n### Default Value\n\nBy default, the expiration for shared access signature tokens is 8 hours.",
  "name": "Ensure Shared Access Signature Tokens Expire Within One Hour",
  "slug": "azure-storage-account-sas-token-expiration",
  "isInsight": false,
  "alertForSecondaryOnly": false,
  "replacementFor": [
    "azure-1-3-0-storage-4"
  ],
  "remediationDescription": "There is no way to change existing SAS tokens since they are not stored in Azure.\n\nWe recommend setting a [SAS expiration policy](https://learn.microsoft.com/en-us/azure/storage/common/sas-expiration-policy?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&bc=%2Fazure%2Fstorage%2Fblobs%2Fbreadcrumb%2Ftoc.json&tabs=azure-portal#configure-a-sas-expiration-policy). While the policy does not enforce the upper expiration limit when creating tokens, this seems to be an upcoming feature. The policy helps you track the usage of SAS tokens valid over a longer interval than the SAS expiration policy recommends.",
  "isEnabled": true,
  "severity": 1
}
