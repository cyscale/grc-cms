{"name":"Ensure default Service account is not used for Project access in Kubernetes Clusters","slug":"gcp-kubernetes-17","body":"A service account is an identity that an instance or an application can use to run API requests on your behalf. This identity is used to identify applications running on your virtual machine instances to other Google Cloud Platform services. By default, Kubernetes Engine nodes are given the Compute Engine default service account. This account has broad access by default, making it useful to a wide variety of applications, but it has more permissions than are required to run your Kubernetes Engine cluster.\n\n**Rationale**\n\nYou should create and use a minimally privileged service account to run your Kubernetes Engine cluster instead of using the Compute Engine default service account. If you are not creating a separate service account for your nodes, you should limit the scopes of the node service account to reduce the possibility of a privilege escalation in an attack. Kubernetes Engine requires, at a minimum, the service account to have the monitoring.viewer, monitoring.metricWriter, and logging.logWriter roles. This ensures that your default service account does not have permissions beyond those necessary to run your cluster. While the default scopes are limited, they may include scopes beyond the minimally required scopes needed to run your cluster.","description":"","severity":2,"remediationDescription":"**Using Console**\n\n1. Go to Kubernetes GCP Console by visiting\nhttps://console.cloud.google.com/kubernetes/list?\n2. Click on `CREATE CLUSTER`\n3. Choose required name/value for cluster fields\n4. Click on `More`\n5. Choose `Service account` which has the least privilege under Project access section, \nInstead of default `Compute Engine default service account`\n\nNOTE: The default scopes for the nodes in Kubernetes Engine are `devstorage.read_only, logging.write, monitoring, service.management.readonly, servicecontrol`, and `trace.append`. If you are accessing private images in Google Container Registry, the minimally required scopes are only `logging.write`, `monitoring`, and `devstorage.read_only`.\n\nYou can configure a service account with minimal privileges and assign the same. \n\n6. Click on Create\n\n**Using Command Line**\n\nTo create a new node pool with service account with least privilege:, run the following command:\n\n```bash\ngcloud container node-pools create \\[NODE_POOL\\] --service-account=\"\\[SA_NAME\\]@\\[PROJECT_ID\\].iam.gserviceaccount.com\" --cluster=\\[CLUSTER_NAME\\] --zone=\\[COMPUTE_ZONE\\] \\`\\`\n```\n\n**Default Value**\n\nBy default, Compute Engine default service account is chosen when you create a new cluster.\n\n**References**\n\n1. https://cloud.google.com/compute/docs/access/service-accounts#compute_engine_default_service_account","rules":[{"cloudProviders":["gcp"],"comparator":"eq","expectedResult":"[]","subjects":["Cluster"],"query":"gcp-kubernetes-17-default-service-account-is-not-used-for-project-access-in-kubernetes-clusters","returnPath":""}]}