{"name":"Ensure VM disks for critical VMs are encrypted with Customer-Supplied Encryption Keys (CSEK)","slug":"gcp-vm-6","body":"Customer-Supplied Encryption Keys (CSEK) are a feature in Google Cloud Storage and Google Compute Engine. If you supply your own encryption keys, Google uses your key to protect the Google-generated keys used to encrypt and decrypt your data. By default, Google Compute Engine encrypts all data at rest. Compute Engine handles and manages this encryption for you without any additional actions on your part. However, if you wanted to control and manage this encryption yourself, you can provide your own encryption keys.\n\n**Rationale**\n\nBy default, Google Compute Engine encrypts all data at rest. Compute Engine handles and manages this encryption for you without any additional actions on your part. However, if you wanted to control and manage this encryption yourself, you can provide your own encryption keys.\n\nIf you provide your own encryption keys, Compute Engine uses your key to protect the Google-generated keys used to encrypt and decrypt your data. Only users who can provide the correct key can use resources protected by a customer-supplied encryption key.\n\nGoogle does not store your keys on its servers and cannot access your protected data unless you provide the key. This also means that if you forget or lose your key, there is no way for Google to recover the key or to recover any data encrypted with the lost key.\n\nAt least business critical VMs should have VM disks encrypted with CSEK.\n","description":"","severity":1,"remediationDescription":"Currently there is no way to update the encryption of an existing disk. Therefore create a new disk with `Encryption` set to `Customer supplied`\n\n**Using Console**\n\n1. Go to `Compute Engine`\n2. Go to `Disks`\n3. For each disk\n4. Set `Encryption` to `Customer supplied`\n5. Provide the `Key` in the box\n6. Select `Wrapped key`\n7. Click `Create`\n\n**Via CLI **\n\nIn the gcloud compute tool, encrypt a disk using the --csek-key-file flag during instance creation. If you are using an RSA-wrapped key, use the gcloud beta component:\n\n```bash\ngcloud (beta) compute instances create \u003cinstanceName\u003e --csek-key-file `\u003cexample-file.json\u003e`\n```\n\nTo encrypt a standalone persistent disk:\n\n```bash\ngcloud (beta) compute disks create \u003cdiskName\u003e --csek-key-file `\u003cexample- file.json\u003e`\n```\n\n**References**\n\n1. https://cloud.google.com/compute/docs/disks/customer-supplied-encryption#encrypt_a_new_persistent_disk_with_your_own_keys\n2. https://cloud.google.com/compute/docs/reference/rest/v1/disks/get\n3. https://cloud.google.com/compute/docs/disks/customer-supplied-encryption#key_file\n\n**Notes**\n\n`Note 1:` When you delete a persistent disk, Google discards the cipher keys, rendering the data irretrievable. This process is irreversible.\n\n`Note 2:` It is up to you to generate and manage your key. You must provide a key that is a 256-bit string encoded in RFC 4648 standard base64 to Compute Engine.\n\n`Note 3:` An example key file looks like this.\n```\n[\n{\n\"uri\": \"https://www.googleapis.com/compute/v1/projects/myproject/zones/us- central1-a/disks/example-disk\",\n\"key\": \"acXTX3rxrKAFTF0tYVLvydU1riRZTvUNC4g5I11NY-c=\", \"key-type\": \"raw\"\n},\n{\n\"uri\": \"https://www.googleapis.com/compute/v1/projects/myproject/global/snapshots/my -private-snapshot\",\n\"key\": \"ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFHz0mBib\nXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoDD6PYznLwh8 ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oeQ5lAbtt7bYAAHf5l+g JWw3sUfs0/Glw5fpdjT8Uggrr+RMZezGrltJEF293rvTIjWOEB3z5OHyHwQkvdrPDFcTqsLfh+8Hr 8g+mf+7zVPEC8nEbqpdl3GPv3A7AwpFp7MA==\"\n  \"key-type\": \"rsa-encrypted\"\n} ]\n```","rules":[{"cloudProviders":["gcp"],"comparator":"eq","expectedResult":"[]","subjects":["Disk"],"query":"gcp-vm-6-vm-disks-for-critical-vms-are-encrypted-with-customer-supplied-encryption-keys-csek","returnPath":""}]}