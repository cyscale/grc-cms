{
  "alertForSecondaryOnly": false,
  "isInsight": false,
  "name": "Minimize the admission of containers with allowPrivilegeEscalation",
  "slug": "k8s-pod-admission-allow-privilege-escalation",
  "body": "\nDo not generally permit containers to be run with the `allowPrivilegeEscalation` flag set\nto true. Allowing this right can lead to a process running a container getting more rights\nthan it started with.\n\nIt's important to note that these rights are still constrained by the overall container\nsandbox, and this setting does not relate to the use of privileged containers.\n\n**Rationale**\n\nA container running with the `allowPrivilegeEscalation` flag set to true may have\nprocesses that can gain more privileges than their parent.\n\nThere should be at least one admission control policy defined which does not permit\ncontainers to allow privilege escalation. The option exists (and is defaulted to true) to\npermit setuid binaries to run.\n\nIf you have need to run containers which use setuid binaries or require privilege\nescalation, this should be defined in a separate policy and you should carefully check to\nensure that only limited service accounts and users are given permission to use that\npolicy.\n\n**Impact**\n\nPods defined with `spec.allowPrivilegeEscalation: true` will not be permitted unless\nthey are run under a specific policy.\n\n**Audit**\n\nList the policies in use for each namespace in the cluster, ensure that each policy\ndisallows the admission of containers which allow privilege escalation.",
  "severity": 2,
  "remediationDescription": "Add policies to each namespace in the cluster which has user workloads to restrict the\nadmission of conatiners with `.spec.allowPrivilegeEscalationset` to `true`.\n\n**Default Value**\n\nBy default, there are no restrictions on contained process ability to escalate privileges,\nwithin the context of the container.\n\n**References**\n\n1.  [https://kubernetes.io/docs/concepts/security/pod-security-standards/](https://kubernetes.io/docs/concepts/security/pod-security-standards/)",
  "rules": [
    {
      "cloudProviders": [
        "k8s"
      ],
      "comparator": "eq",
      "expectedResult": "[]",
      "subjects": [
        "KubernetesPod"
      ],
      "query": "query-k8s-pod-allow-privilege-escalation"
    }
  ]
}