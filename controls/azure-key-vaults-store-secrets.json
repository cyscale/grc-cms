{
  "body": "Azure Key Vault will store multiple types of sensitive information, such as encryption keys, certificate thumbprints, and Managed Identity Credentials. Access to these secrets can be controlled through granular permissions.\n\n### Rationale\n\nThe credentials given to an application have permission to create, delete, or modify data stored within the systems they access. If these credentials are stored within the application, anyone with access to it or a copy of the code can access them. Storing within Azure Key Vault as secrets increases security by controlling access. This also allows for updates of the credentials without redeploying the entire application.\n\n### Impact\n\nReferences to secrets within the key vault must be specifically integrated within the application code. This will require additional configuration during application writing or refactoring. Additional costs are also charged per 10,000 requests to the Key Vault.",
  "name": "Ensure Azure Key Vaults are used to store secrets",
  "slug": "azure-key-vaults-store-secrets",
  "isInsight": false,
  "alertForSecondaryOnly": false,
  "rules": [
    {
      "cloudProviders": [
        "azure"
      ],
      "comparator": "eq",
      "expectedResult": "[]",
      "subjects": [
        "FunctionApp"
      ],
      "query": "functionapps-with-secrets-and-without-keyvault-references",
      "isManual": false
    },
    {
      "cloudProviders": [
        "azure"
      ],
      "comparator": "eq",
      "expectedResult": "[]",
      "subjects": [
        "Site"
      ],
      "query": "sites-with-secrets-and-without-keyvault-references",
      "isManual": false
    }
  ],
  "remediationDescription": "For connecting to Azure services, there are [more secure ways that do not require secrets](https://learn.microsoft.com/en-us/azure/app-service/tutorial-connect-overview).\n\nHowever, if you need to provide secrets to your web app, we recommend storing them in Azure Key Vault and referencing them. The procedure is relatively simple and well described in the [Azure documentation](https://learn.microsoft.com/en-us/azure/app-service/app-service-key-vault-references?tabs=azure-cli).\n\nIn short, you will need to:\n\n1. Create or use an existing Azure Key Vault.\n1. Add the secrets to the Key Vault.\n1. Grant permission for the Web App to the Key Vault. This implies your web app uses a managed identity (system or user-assigned). You can use the predefined role `Key Vault Secrets User` for RBAC Key Vaults, or assign `Get` secrets permissions if using access policies.\n1. Reference the Key Vault secrets from the app settings using the special value `@Microsoft.KeyVault(SecretUri=https://myvault.vault.azure.net/secrets/mysecret)` or `@Microsoft.KeyVault(VaultName=myvault;SecretName=mysecret)`",
  "isEnabled": true,
  "description": "Web Apps with secrets stored in environment variables",
  "severity": 2
}
