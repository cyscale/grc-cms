{
  "alertForSecondaryOnly": false,
  "name": "Ensure no HTTPS or SSL proxy load balancers permit SSL policies with weak cipher suites",
  "slug": "gcp-load-balancers-permit-ssl-weak-ciphers",
  "body": "Secure Sockets Layer (SSL) policies determine what port Transport Layer Security (TLS) features clients are permitted to use when connecting to load balancers. To prevent usage of insecure features, SSL policies should use (a) at least TLS 1.2 with the MODERN profile; or (b) the RESTRICTED profile, because it effectively requires clients to use TLS 1.2 regardless of the chosen minimum TLS version; or (3) a CUSTOM profile that does not support any of the following features:\n\n```json\nTLS_RSA_WITH_AES_128_GCM_SHA256\nTLS_RSA_WITH_AES_256_GCM_SHA384\nTLS_RSA_WITH_AES_128_CBC_SHA\nTLS_RSA_WITH_AES_256_CBC_SHA\nTLS_RSA_WITH_3DES_EDE_CBC_SHA\n```\n\n**Rationale**\n\nLoad balancers are used to efficiently distribute traffic across multiple servers. Both SSL proxy and HTTPS load balancers are external load balancers, meaning they distribute traffic from the Internet to a GCP network. GCP customers can configure load balancer SSL policies with a minimum TLS version (1.0, 1.1, or 1.2) that clients can use to establish a connection, along with a profile (Compatible, Modern, Restricted, or Custom) that specifies permissible cipher suites. To comply with users using outdated protocols, GCP load balancers can be configured to permit insecure cipher suites. In fact, the GCP default SSL policy uses a minimum TLS version of 1.0 and a Compatible profile, which allows the widest range of insecure cipher suites. As a result, it is easy for customers to configure a load balancer without even knowing that they are permitting outdated cipher suites.\n\n**Impact**\n\nCreating more secure SSL policies can prevent clients using older TLS versions from establishing a connection.",
  "severity": 3,
  "remediationDescription": "**From Google Cloud Console**\n\nIf the TargetSSLProxy or TargetHttpsProxy does not have an SSL policy configured, create a new SSL policy. Otherwise, modify the existing insecure policy.\n\n1. Navigate to the SSL Policies page by visiting: https://console.cloud.google.com/net-security/sslpolicies\n2. Click on the name of the insecure policy to go to its SSL policy details page.\n3. Click `EDIT`.\n4. Set `Minimum TLS version` to `TLS 1.2`.\n5. Set `Profile` to `Modern` or `Restricted`.\n6. Alternatively, if teh user selects the profile `Custom`, make sure that the following features are disabled:\n\n```json\nTLS_RSA_WITH_AES_128_GCM_SHA256\nTLS_RSA_WITH_AES_256_GCM_SHA384\nTLS_RSA_WITH_AES_128_CBC_SHA\nTLS_RSA_WITH_AES_256_CBC_SHA\nTLS_RSA_WITH_3DES_EDE_CBC_SHA\n```\n\n**Using Google Cloud CLI**\n\n1. For each insecure SSL policy, update it to use secure cyphers:\n\n```bash\ngcloud compute ssl-policies update NAME [--profile COMPATIBLE|MODERN|RESTRICTED|CUSTOM] --min-tls-version 1.2 [--custom-features features ]\n```\n\n2. If the target proxy has a GCP default SSL policy, use the following command corresponding to the proxy type to update it.\n\n```bash\ngcloud compute target-ssl-proxies update targetSSLProxyName --ssl-policy SSLPolicyName\ngcloud compute target-https-proxies update targetHTTPSProxyName --sslpolicy SSLPolicyName\n```\n\n**Default Value**\n\nThe GCP default SSL policy is the least secure setting: Min TLS 1.0 and Compatible profile\n\n**References**\n\n1. [https://cloud.google.com/load-balancing/docs/use-ssl-policies](https://cloud.google.com/load-balancing/docs/use-ssl-policies)\n2. [https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r2.pdf](https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r2.pdf)",
  "rules": [
    {
      "cloudProviders": [
        "gcp"
      ],
      "comparator": "eq",
      "expectedResult": "[]",
      "subjects": [
        "TargetHTTPSProxy",
        "TargetSSLProxy"
      ],
      "query": "gcp-1-1-0-networking-9-no-https-or-ssl-proxy-load-balancers-permit-ssl-policies-with-weak-cipher-suites"
    }
  ]
}