{
  "alertForSecondaryOnly": false,
  "name": "Ensure Secrets are not stored in Cloud Functions environment variables by using Secret Manager",
  "slug": "gcp-secrets-not-in-env-variables",
  "severity": 2,
  "rules": [
    {
      "query": "gcp-query-secrets-not-in-env-variables",
      "cloudProviders": [
        "gcp"
      ],
      "comparator": "eq",
      "expectedResult": "[]",
      "subjects": [
        "Function"
      ]
    }
  ],
  "body": "Google Cloud Functions allow you to host serverless code that is executed when an event is triggered, without requiring the management of a host operating system. These functions can also store environment variables to be used by the code that may contain authentication or other information that need to remain confidential.\n\n**Rationale**\n\nIt is recommended to use the Secret Manager, because environment variables are stored unencrypted, and accessible for all users who have access to the code.\n\n**Impact**\n\nThere should be no impact on the Cloud Function. There are minor costs after 10,000 requests a month to the Secret Manager API as well for a high use of other functions. Modifying the Cloud Function to use the Secret Manager may prevent it running to completion.",
  "remediationDescription": "**From Google Cloud Console**\n\n### To enable Secret Manager API for your Project\n\n1. Within the project you wish to enable, navigate to `APIs & Services` , then select `Enabled APIs & Services` in the menu that opens up\n2. Click the button `+ Enable APIS and Services`\n3. In the Search bar, search for `Secret Manager API` and select it\n4. Click the blue box that says `Enable`\n\n### Reviewing environment variables that should be migrated to Secret Manager\n\n1. Go to Cloud Functions\n2. Click on a function name from the list\n3. Click on `EDIT` and look under `Runtime environment variables` for variables that should be secrets. Leave this list open for the next step\n\n### Migrating environment variables to Secrets within the Secret Manager\n\n1. Go to the Secret Manager page\n2. On the Secret Manager page, click `Create Secret`\n3. On the `Create secret` page, under `Name`, enter the name of the Environment Variable you are replacing. This will then be the Secret Variable you will reference in your code.\n4. You will also need to add a version. This is the actual value of the variable that will be referenced from the code. To add a secret version when creating the initial secret, in the Secret value field, enter the value from the Environment Variable you are replacing\n5. Leave the `Regions` section unchanged\n6. Click the `Create secret` button\n7. Repeat for all Environment Variables\n\n### Granting your runtime's Service Account access to Secrets\n\n1. Navigate to `Secret Manager` with an account that has the `roles/secretmanager.secretAccessor` permission\n3. Click the name of a secret listed in this screen\n4. If it is not already open, click `Show Info Panel` in this screen to open the panel\n5. In the info panel, click `Add principal`\n6. In the `New principals` field, enter the service account your function uses for its identity. (If you need help locating or updating your runtime's service account, please see the 'docs/securing/function-identity#runtime_service_account' reference.)\n5. In the `Select a role` dropdown, choose `Secret Manager` and then `Secret Manager Secret Accessor`\n\n### Modify your code to use the Secrets in Secret Manager\n\nPlease see the '/docs/creating-and-accessing-secrets#access' reference for language specific instructions\n\n### Deleting the insecure Environment Variables\n\n1. Navigate to `Secret Manager` under `Security`\n2. Click the name of a function. Click `EDIT`\n3. Click Runtime, build and connections settings to expand the advanced configuration options\n4. Click `Security`. Hover over the secret you want to remove, then click `Delete`\n5. Click `Next`. Click `Deploy`. The latest version of the runtime will now reference the secrets in Secret Manager\n\n**Using Google Cloud CLI**\n\n### To enable Secret Manager API for your Project\n\nWithin the project you wish to enable the API in, run the following command:\n\n```bash\ngcloud services enable Secret Manager API\n```\n\n### Reviewing environment variables that should be migrated to Secret Manager\n\n1. To view a list of your cloud functions run the following command:\n\n```bash\ngcloud functions list\n```\n\n2. For each cloud function run the following command:\n\n```bash\ngcloud functions describe <functionName>\n```\n\n3. Review the settings of the buildEnvironmentVariables and environmentVariables. Keep this information for the next step\n\n### Migrating environment variables to Secrets within the Secret Manager\n\n1. Run the following command with the Environment Variable name you are replacing in the `<secretID>`. It is most secure to point this command to a file with the Environment Variable value located in it, as if you entered it via command line it would show up in your shellâ€™s command history\n\n```bash\ngcloud secrets create <secretID> --data-file=\"/path/to/file.txt\"\n```\n\n### Granting your runtime's Service Account access to Secrets\n\nAs of the time of writing, using Google CLI to list Runtime variables is only in beta\n\n### Modify your code to use the Secrets in Secret Manager\n\nPlease see the '/docs/creating-and-accessing-secrets#access' reference for language specific instructions\n\n### Deleting the insecure Environment Variables\n\n```bash\ngcloud functions deploy <functionName> --remove-env-vars <envVars>\n```\n\nIf you need to find the environment variables to remove, you can find them in the output of the command `gcloud functions describe <functionName>`\n\n**Default value**\n\nBy default, Secret Manager is not enabled.\n\n**References**\n\n1. [https://cloud.google.com/functions/docs/configuring/env-var#managing_secrets](https://cloud.google.com/functions/docs/configuring/env-var#managing_secrets)\n2. [https://cloud.google.com/secret-manager/docs/overview](https://cloud.google.com/secret-manager/docs/overview)\n\n**Additional information**\n\nThere are slight additional costs to using the Secret Manager API. Review the documentation to determine your organizations' needs."
}