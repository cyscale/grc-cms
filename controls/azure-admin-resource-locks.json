{
  "body": "Resource locking is a powerful protection mechanism that can prevent inadvertent modification/deletion of resources within Azure subscriptions/Resource Groups and is a recommended NIST configuration.\n\n### Rationale\n\nGiven the resource lock functionality is outside of standard Role Based Access Control(RBAC), it would be prudent to create a resource lock administrator role to prevent inadvertent unlocking of resources.\n\n### Impact\n\nBy adding this role, specific permissions may be granted for managing just resource locks rather than needing to provide the wide Owner or User Access Administrator role, reducing the risk of the user being able to do unintentional damage.",
  "name": "Ensure a Custom Role is Assigned Permissions for Administering Resource Locks",
  "slug": "azure-admin-resource-locks",
  "isInsight": false,
  "alertForSecondaryOnly": false,
  "rules": [
    {
      "cloudProviders": [
        "azure"
      ],
      "comparator": "eq",
      "expectedResult": "[]",
      "subjects": [
        "CloudAccount"
      ],
      "query": "azure-iam-custom-roles-with-locks-permission"
    }
  ],
  "remediationDescription": "### From Azure Portal\n\n1. In the Azure portal, open a subscription or resource group where you want the custom role assigned.\n2. Select `Access control (IAM).`\n3. Click `Add`.\n4. Select `Add custom role`.\n5. In the `Custom Role Name` field, enter `Resource Lock Administrator`.\n6. In the Description field, enter `Can Administer Resource Locks`.\n7. For Baseline permissions, select `Start from scratch`\n8. Select `next`.\n9. In the Permissions tab, select `Add permissions`.\n10. In the Search for a permission box, type in `Microsoft.Authorization/locks` to search for permissions.\n11. Select the check box next to the permission `Microsoft.Authorization/locks`.\n12. Select `Add`.\n13. Select `Review + create`.\n14. Select `Create`.\n15. Assign the newly created role to the appropriate user.\n\n### From PowerShell:\n\nBelow is a power shell definition for a resource lock administrator role created at an Azure Management group level:\n\n```bash\nImport-Module Az.Accounts\nConnect-AzAccount\n\n$role = Get-AzRoleDefinition \"User Access Administrator\" $role.Id = $null\n$role.Name = \"Resource Lock Administrator\" $role.Description = \"Can Administer Resource Locks\" $role.Actions.Clear() $role.Actions.Add(\"Microsoft.Authorization/locks/*\") $role.AssignableScopes.Clear()\n\n* Scope at the Management group level Management Group\n\n$role.AssignableScopes.Add(\"/providers/Microsoft.Management/managementGroups/ MG-Name\")\n\nNew-AzRoleDefinition -Role $role Get-AzureRmRoleDefinition \"Resource Lock Administrator\"\n```",
  "isEnabled": true,
  "description": "No custom role for administering resource locks",
  "severity": 1
}
