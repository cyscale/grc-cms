{
  "alertForSecondaryOnly": false,
  "isInsight": false,
  "name": "Ensure 'cloudsql.enable_pgaudit' database flag for each Cloud SQL PostgreSQL instance is set to 'on' for centralized logging",
  "slug": "gcp-cloudsql-enable-pgaudit-db-flag-postgresql",
  "rules": [
    {
      "query": "gcp-query-cloudsql-enable-pgaudit-db-flag-postgresql",
      "subjects": [
        "CloudSQLInstance"
      ],
      "cloudProviders": [
        "gcp"
      ],
      "comparator": "eq",
      "expectedResult": "[]"
    }
  ],
  "severity": 1,
  "remediationDescription": "**From Google Cloud Console**\n\n1. Go to the `Cloud SQL Instances` page in the Google Cloud Console by visiting https://console.cloud.google.com/sql/instances\n2. Select the PostgreSQL instance where the database flag needs to be enabled\n3. Click `EDIT`\n4. Scroll down to the `Flags` section\n5. To set a flag that has not been set on the instance before, click `ADD A DATABASE FLAG`, choose the flag `cloudsql.enable_pgaudit` from the drop-down menu, and set its value to `on`\n6. Click `SAVE`\n7. Confirm the changes under `Flags` on the `Overview` page\n\n**Using Google Cloud CLI**\n\nRun the following command: \n\n```bash\ngcloud sql instances patch <instanceName> --database-flags cloudsql.enable_pgaudit=on,pgaudit.log=all\n```\n\nTo determine if the logs are being sent to the Logs Explorer, navigate to `Logs Explorer` under `Operations` and, in the query box, paste the following:\n\n```bash\nresource.type=\"cloudsql_database\" logName=\"projects//logs/cloudaudit.googleapis.com%2Fdata_access\" protoPayload.request.@type=\"type.googleapis.com/google.cloud.sql.audit.v1.PgAuditEntry\"\n```\nIf it returns any log sources, they are correctly setup.\n\n**Default Value**\n\nBy default `cloudsql.enable_pgaudit` is set to `off`, and the extension is not enabled.\n\n**References**\n\n1. [https://cloud.google.com/sql/docs/postgres/flags#list-flags-postgres](https://cloud.google.com/sql/docs/postgres/flags#list-flags-postgres)\n2. [https://cloud.google.com/sql/docs/postgres/pg-audit#enable-auditing-flag](https://cloud.google.com/sql/docs/postgres/pg-audit#enable-auditing-flag)\n3. [https://cloud.google.com/sql/docs/postgres/pg-audit#customizing-database-audit-logging](https://cloud.google.com/sql/docs/postgres/pg-audit#customizing-database-audit-logging)\n4. [https://cloud.google.com/logging/docs/audit/configure-data-access#config-console-enable](https://cloud.google.com/logging/docs/audit/configure-data-access#config-console-enable)\n\n**Additional information**\n\nWARNING: This patch modifies database flag values, which may require the instance to be restarted. Check the list of supported flags https://cloud.google.com/sql/docs/postgres/flags - to see if your instance will be restarted when this patch is submitted.\n\nNote: Configuring the `cloudsql.enable_pgaudit` database flag requires restarting the Cloud SQL PostgreSQL instance.",
  "body": "Ensure `cloudsql.enable_pgaudit` database flag for Cloud SQL PostgreSQL instance is set to `on` to allow for centralized logging\n\n**Rationale**\n\nAs numerous other recommendations in this section consist of turning on flags for logging purposes, your organization will need a way to manage these logs. You may have a solution already in place. If you do not, consider installing and enabling the open source pgaudit extension within PostgreSQL and enabling its corresponding flag of `cloudsql.enable_pgaudit`. This flag and the installation of the extension enable database auditing in PostgreSQL through the open-source pgAudit extension. This extension provides detailed session and object logging to comply with government, financial, and ISO standards and provides auditing capabilities to mitigate threats by monitoring security events on the instance. Enabling the flag and settings later in this recommendation will send these logs to Google Logs Explorer so that you can access them in a central location. to This recommendation is applicable only to PostgreSQL database instances.\n\n**Impact**\n\nEnabling the pgAudit extension can lead to increased data storage requirements and to ensure durability of pgAudit log records in the event of unexpected storage issues, it is recommended to enable the Enable automatic storage increases setting on the instance. Enabling flags via the command line will also overwrite all existing flags, so you should apply all needed flags in the CLI command. Also flags may require a restart of the server to be implemented or will break existing functionality so update your servers at a time of low usage."
}