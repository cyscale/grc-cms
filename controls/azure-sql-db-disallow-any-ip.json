{
  "name": "Ensure no Azure SQL Databases allow ingress from 0.0.0.0/0 (ANY IP)",
  "slug": "azure-sql-db-disallow-any-ip",
  "body": "Ensure that no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP).\n\n**Rationale**\n\nAzure SQL Server includes a firewall to block access to unauthorized connections. More granular IP addresses can be defined by referencing the range of addresses available from specific datacenters.\n\nBy default, for a SQL server, a Firewall exists with StartIp of 0.0.0.0 and EndIP of 0.0.0.0, allowing access to all of the Azure services.\n\nAdditionally, a custom rule can be set up with StartIp of 0.0.0.0 and EndIP of 255.255.255.255, allowing access from ANY IP over the Internet.\n\nIn order to reduce the potential attack surface of a SQL server, firewall rules should be defined with more granular IP addresses by referencing the range of addresses available from specific datacenters.\n\n**Impact**\n\nDisabling `Allow Azure services and resources to access this server` will break all connections to SQL servers and Hosted Databases unless custom IP specific rules are added in Firewall Policy.",
  "severity": 3,
  "remediationDescription": "**From Azure Console**\n\n1. Go to `SQL servers`\n2. For each SQL server, under `Security`, select `Networking`\n3. Uncheck `Allow access to Azure services`\n4. Set firewall rules to limit access to authorized connections\n\n**Using Azure CLI**\n\nDisable default firewall rule `Allow Azure services and resources to access this server`:\n\n```bash\naz sql server firewall-rule delete --resource-group <resourceGroup> --server <sqlServerName> --name \"AllowAllWindowsAzureIps\"\n```\n\nRemove a custom firewall rule:\n\n```bash\naz sql server firewall-rule delete --resource-group <resourceGroup> --server <sqlServerName> --name <firewallRuleName>\n```\n\nCreate an appropriate firewall rule, with the start IP address other than 0.0.0.0 and end IP address other than 0.0.0.0 or 255.255.255.255\n\n```bash\naz sql server firewall-rule create --resource-group <resourceGroup> --server <sqlServerName> --name <firewallRuleName> --start-ip-address \"<startIPAddress>\" --end-ip-address \"<endIPAddress>\"\n```\n\nUpdate a firewall rule\n\n```bash\naz sql server firewall-rule update --resource-group <resourceGroup> --server <sqlServerNamee> --name <firewallRuleName> --start-ip-address \"<startIPAddress>\" --end-ip-address \"<endIPAddress>\"\n```\n\n**Using Azure PowerShell**\n\nDisable default firewall rule `Allow Azure services and resources to access this server`:\n\n```powershell\nRemove-AzureRmSqlServerFirewallRule -FirewallRuleName \"AllowAllWindowsAzureIps\" -ResourceGroupName <resourceGroupName> -ServerName <serverName>\n```\n\nRemove a custom firewall rule:\n\n```powershell\nRemove-AzureRmSqlServerFirewallRule -FirewallRuleName \"<firewallRuleName>\" -ResourceGroupName <resourceGroupName> -ServerName <serverName>\n```\n\nCreate an appropriate firewall rule, with the start IP address other than 0.0.0.0 and end IP address other than 0.0.0.0 or 255.255.255.255\n\n```powershell\nSet-AzureRmSqlServerFirewallRule -ResourceGroupName <resourceGroupName> -ServerName <serverName> -FirewallRuleName \"<firewallRuleName>\" -StartIpAddress \"<startIPAddress>\" -EndIpAddress \"<endIPAddress>\"\n```\n\n**Default Value**\n\nBy default, setting `Allow Azure services and resources to access this server` is set to `ON`, allowing access to all Windows Azure IP ranges.\n\n**References**\n\n1. [https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-a-windows-firewall-for-database-engine-access?view=sql-server-2017](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-a-windows-firewall-for-database-engine-access?view=sql-server-2017)\n2. [https://docs.microsoft.com/en-us/powershell/module/azurerm.sql/get-azurermsqlserverfirewallrule?view=azurermps-5.2.0](https://docs.microsoft.com/en-us/powershell/module/azurerm.sql/get-azurermsqlserverfirewallrule?view=azurermps-5.2.0)\n3. [https://docs.microsoft.com/en-us/powershell/module/azurerm.sql/set-azurermsqlserverfirewallrule?view=azurermps-5.2.0](https://docs.microsoft.com/en-us/powershell/module/azurerm.sql/set-azurermsqlserverfirewallrule?view=azurermps-5.2.0)\n4. [https://docs.microsoft.com/en-us/powershell/module/azurerm.sql/remove-azurermsqlserverfirewallrule?view=azurermps-5.2.0](https://docs.microsoft.com/en-us/powershell/module/azurerm.sql/remove-azurermsqlserverfirewallrule?view=azurermps-5.2.0)\n5. [https://docs.microsoft.com/en-us/azure/sql-database/sql-database-firewall-configure]https://docs.microsoft.com/en-us/azure/sql-database/sql-database-firewall-configure()\n6. [https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-set-database-firewall-rule-azure-sql-database?view=azuresqldb-current](https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-set-database-firewall-rule-azure-sql-database?view=azuresqldb-current)\n7. [https://docs.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-network-security#ns-2-secure-cloud-services-with-network-controls](https://docs.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-network-security#ns-2-secure-cloud-services-with-network-controls)\n\n**Additional Information**\n\nFirewall rules configured on individual SQL Database using Transact-sql overrides the rules set on SQL server. Azure does not provides any Powershell, API, CLI, Portal option to check database level firewall rules, and so far, Transact-SQL is the only way to check that. For comprehensive control over egress traffic on SQL Databases, firewall rules should be checked using the SQL client.",
  "rules": [
    {
      "cloudProviders": [
        "azure"
      ],
      "comparator": "eq",
      "expectedResult": "[]",
      "subjects": [
        "SQLServer"
      ],
      "query": "azure-1-3-0-networking-3-no-azure-sql-databases-allow-ingress-from-0-0-0-00-any-ip"
    }
  ]
}