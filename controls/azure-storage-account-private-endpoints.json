{
  "body": "Use private endpoints for your Azure Storage accounts to allow clients and services to securely access data located over a network via an encrypted Private Link. The private endpoint uses an IP address from the VNet for each service to do this. Network traffic between disparate services securely traverses and is encrypted over the VNet. This VNet can also link addressing space, extend your network, and access resources. Similarly, it can be a tunnel through public networks to connect remote infrastructures. This creates further security by segmenting network traffic and preventing outside sources from accessing it.\n\n### Rationale\n\nSecuring traffic between services through encryption protects the data from easy interception and reading.\n\n### Impact\n\nA Private Endpoint costs approximately US$7.30 per month. If an Azure Virtual Network is not implemented correctly, critical network traffic may be lost.\n\n### Default Value\n\nBy default, Private Endpoints are not created for Storage Accounts.",
  "name": "Ensure Private Endpoints are used to access Storage Accounts",
  "slug": "azure-storage-account-private-endpoints",
  "isInsight": false,
  "alertForSecondaryOnly": false,
  "rules": [
    {
      "isManual": false,
      "cloudProviders": [
        "azure"
      ],
      "comparator": "eq",
      "expectedResult": "[]",
      "subjects": [
        "StorageAccount"
      ],
      "query": "azure-storage-accounts-without-private-endpoints"
    }
  ],
  "remediationDescription": "### From Azure Console\n\n1. Open the `Storage Accounts` blade.\n2. For each list Storage Account, perform the following:\n3. Under the `Security + networking` heading, click `Networking`.\n4. Click on the `Private Endpoint Connections` tab at the top of the networking window.\n5. Click the `+Private endpoint` button.\n6. In the `1 - Basics` tab/step:\n   - `Enter a name` that will be easily recognizable as associated with the Storage Account (Note: The \"Network Interface Name\" will be automatically completed, but you can customize it if needed.)\n   - Ensure that the `Region` matches the region of the Storage Account.\n   - Click `Next`.\n7. In the `2 - Resource` tab/step:\n   - Select the `target sub-resource` based on what type of storage resource is being made available.\n   - Click `Next`.\n8. In the `3 - Virtual Network` tab/step:\n   - Select the `Virtual network` to which your Storage Account will be connected.\n   - Select the `Subnet` to which your Storage Account will be connected.\n   - (Optional) Select other network settings that are appropriate for your environment.\n   - Click `Next`.\n9. In the `4 - DNS` tab/step:\n   - (Optional) Select other DNS settings as appropriate for your environment\n   - Click `Next`.\n10. In the `5 - Tags` tab/step:\n    - (Optional) Set any tags that are relevant to your organization.\n    - Click `Next`.\n11. In the `6 - Review + create` tab/step:\n    A validation attempt will be made, and after a few moments, it should indicate `Validation Passed`. If it does not pass, double-check your settings before beginning more in-depth troubleshooting.\n    - If validation has passed, click `Create`, then wait for a few minutes for the scripted deployment to complete.\n\nRepeat the above procedure for each Private Endpoint required within every Storage Account.\n\n### From PowerShell\n\n```bash\n$storageAccount = Get-AzStorageAccount -ResourceGroupName '\n<ResourceGroupName>' -Name '<storageaccountname>'\n\n\n$privateEndpointConnection = @{\n   Name = 'connectionName'\n   PrivateLinkServiceId = $storageAccount.Id\n   GroupID = \"blob|blob_secondary|file|file_secondary|table|table_secondary|queue|queue_se condary|web|web_secondary|dfs|dfs_secondary\"\n}\n\n$privateLinkServiceConnection = New-AzPrivateLinkServiceConnection @privateEndpointConnection\n\n$virtualNetDetails = Get-AzVirtualNetwork -ResourceGroupName '\n<ResourceGroupName>' -Name '<name>'\n\n\n$privateEndpoint = @{\n   ResourceGroupName = '<ResourceGroupName>'\n   Name = '<PrivateEndpointName>'\n   Location = '<location>'\n   Subnet = $virtualNetDetails.Subnets[0]\n   PrivateLinkServiceConnection = $privateLinkServiceConnection\n}\nNew-AzPrivateEndpoint @privateEndpoint\n```\n\n### From Azure CLI\n\n```bash\naz network private-endpoint create --resource-group <resource_group_name> --location <location> --name <private_endpoint_name> --vnet-name <VNET Name> --subnet <subnet_name> --private-connection-resource-id <storage_account_id> --connection-name <connection_name> --group-id <blob|blob_secondary|file|file_secondary|table|table_secondary|queue|queue_secondary|web|web_secondary|dfs|dfs_secondary>\n```",
  "isEnabled": true,
  "severity": 2
}
