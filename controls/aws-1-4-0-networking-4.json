{
  "body": "Once a VPC peering connection is established, routing tables must be updated to establish any connections between the peered VPCs. These routes can be as specific as desired - even peering a VPC to only a single host on the other side of the connection.\n\n**Rationale**\n\nBeing highly selective in peering routing tables is a very effective way of minimizing the impact of breach as resources outside of these routes are inaccessible to the peered VPC.",
  "name": "Ensure routing tables for VPC peering are \"least access\"",
  "slug": "aws-1-4-0-networking-4",
  "isInsight": false,
  "alertForSecondaryOnly": false,
  "rules": [],
  "remediationDescription": "Remove and add route table entries to ensure that the least number of subnets or hosts as is required to accomplish the purpose for peering are routable.\n\n**From Command Line**\n\n1. For each <route_table_id> containing routes non compliant with your routing policy (which grants more than desired \"least access\"), delete the non compliant route:\n\n```bash\naws ec2 delete-route --route-table-id <route_table_id> --destination-cidr-block <non_compliant_destination_CIDR>```\n2. Create a new compliant route:\n\n```bash\nnaws ec2 create-route --route-table-id <route_table_id> --destination-cidr-block <compliant_destination_CIDR> --vpc-peering-connection-id <peering_connection_id>```\n\n\n**References**\n\n1. https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/peering-\nconfigurations-partial-access.html\n2. https://docs.aws.amazon.com/cli/latest/reference/ec2/create-vpc-peering-\nconnection.html\n",
  "isEnabled": false,
  "description": "",
  "severity": 2
}
