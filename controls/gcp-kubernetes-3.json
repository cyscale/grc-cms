{"name":"Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters","slug":"gcp-kubernetes-3","body":"In Kubernetes, authorizers interact by granting a permission if any authorizer grants the permission. The legacy authorizer in Kubernetes Engine grants broad, statically defined permissions. To ensure that RBAC limits permissions correctly, you must disable the legacy authorizer. RBAC has significant security advantages, can help you ensure that users only have access to cluster resources within their own namespace and is now stable in Kubernetes.\n\n**Rationale**\n\nEnable Legacy Authorization for in-cluster permissions that support existing clusters or workflows. Disable legacy authorization for full RBAC support for in-cluster permissions. In Kubernetes, RBAC is used to grant permissions to resources at the cluster and namespace level. RBAC allows you to define roles with rules containing a set of permissions.","description":"","severity":3,"remediationDescription":"**Using Console**\n\n1. Go to Kubernetes GCP Console by visiting https://console.cloud.google.com/kubernetes/list?\n2. Select reported Kubernetes clusters for which Legacy Authorization is enabled\n3. Click on EDIT button and Set 'Legacy Authorization' to Disabled\n\n**Using Command Line**\n\nTo disable Legacy Authorization for an existing cluster, run the following command:\n\n```bash\ngcloud container clusters update \\[CLUSTER_NAME\\] --zone \\[COMPUTE_ZONE\\] --no-enable-legacy-authorization\n```\n\n**Impact**\n\nOnce the cluster has the legacy authorizer disabled, you must grant your user the ability to create authorization roles to ensure that your role-based access control permissions take effect.\n\n**Default Value**\n\nKubernetes Engine clusters running Kubernetes version 1.8 and later disable the legacy authorization system by default, and thus role-based access control permissions take effect with no special action required.\n\n**References**\n\n1. https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control?hl=en_US\n2. https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-container-cluster\n\n**Notes**\n\nOn clusters running Kubernetes 1.6 or 1.7, Kubernetes service accounts have full permissions on the Kubernetes API by default. To ensure that your role-based access control permissions take effect for a Kubernetes service account, you must create or update your cluster with the option --no-enable-legacy-authorization. This requirement is removed for clusters running Kubernetes version 1.8 or higher.","rules":[{"cloudProviders":["gcp"],"comparator":"eq","expectedResult":"[]","subjects":["Cluster"],"query":"gcp-kubernetes-3-legacy-authorization-is-set-to-disabled-on-kubernetes-engine-clusters","returnPath":""}]}