{"name":"Ensure that encryption is enabled for RDS Instances","slug":"aws-1-4-0-storage-3-1","body":"Amazon RDS encrypted DB instances use the industry standard AES-256 encryption algorithm to encrypt your data on the server that hosts your Amazon RDS DB instances. After your data is encrypted, Amazon RDS handles authentication of access and decryption of your data transparently with a minimal impact on performance.","description":"","severity":2,"remediationDescription":"**From Console**\n\n1. Login to the AWS Management Console and open the RDS dashboard at https://console.aws.amazon.com/rds/.\n2. In the left navigation panel, click on `Databases`\n3. Select the Database instance that needs to encrypt.\n4. Click on `Actions` button placed at the top right and select `Take Snapshot`.\n5. On the Take Snapshot page, enter a database name of which you want to take a snapshot in the `Snapshot Name` field and click on `Take Snapshot`.\n6. Select the newly created snapshot and click on the `Action` button placed at the top right and select `Copy snapshot` from the Action menu.\n7. On the Make Copy of DB Snapshot page, perform the following:\n\n- In the New DB Snapshot Identifier field, Enter a name for the `new snapshot`.\n- Check `Copy Tags`, New snapshot must have the same tags as the source snapshot.\n- Select `Yes` from the `Enable Encryption` dropdown list to enable encryption, You can choose to use the AWS default encryption key or custom key from Master Key dropdown list.\n\n8. Click `Copy Snapshot` to create an encrypted copy of the selected instance snapshot.\n9. Select the new Snapshot Encrypted Copy and click on the `Action` button placed at the top right and select `Restore Snapshot` button from the Action menu, This will restore the encrypted snapshot to a new database instance.\n10. On the Restore DB Instance page, enter a unique name for the new database instance in the DB Instance Identifier field.\n11. Review the instance configuration details and click `Restore DB Instance`.\n12. As the new instance provisioning process is completed can update application configuration to refer to the endpoint of the new Encrypted database instance Once the database endpoint is changed at the application level, can remove the unencrypted instance.\n\n**From Command Line**\n\n1. Run `describe-db-instances` command to list all RDS database names available in the selected AWS region, The command output should return the database instance identifier.\n\n```bash\naws rds describe-db-instances --region \u003cregion-name\u003e --query 'DBInstances[*].DBInstanceIdentifier'```\n\n2. Run `create-db-snapshot` command to create a snapshot for the selected database instance, The command output will return the new snapshot with name DB Snapshot Name.\n\n```bash\naws rds create-db-snapshot --region \u003cregion-name\u003e --db-snapshot-identifier \u003cDB-Snapshot-Name\u003e --db-instance-identifier \u003cDB-Name\u003e```\n\n3. Now run `list-aliases` command to list the KMS keys aliases available in a specified region, The command output should return each `key alias currently available`. For our RDS encryption activation process, locate the ID of the AWS default KMS key.\n\n```bash\naws kms list-aliases --region \u003cregion-name\u003e```\n\n4. Run `copy-db-snapshot` command using the default KMS key ID for RDS instances returned earlier to create an encrypted copy of the database instance snapshot, The command output will return the `encrypted instance snapshot configuration`.\n\n```bash\naws rds copy-db-snapshot --region \u003cregion-name\u003e --source-db-snapshot-identifier \u003cDB-Snapshot-Name\u003e --target-db-snapshot-identifier \u003cDB-Snapshot-Name-Encrypted\u003e --copy-tags --kms-key-id \u003cKMS-ID-For-RDS\u003e```\n\n5. Run `restore-db-instance-from-db-snapshot` command to restore the encrypted snapshot created at the previous step to a new database instance, If successful, the command output should return the new encrypted database instance configuration.\n\n```bash\naws rds restore-db-instance-from-db-snapshot --region \u003cregion-name\u003e --db-instance-identifier \u003cDB-Name-Encrypted\u003e --db-snapshot-identifier \u003cDB-Snapshot-Name-Encrypted\u003e```\n\n6. Run `describe-db-instances` command to list all RDS database names, available in the selected AWS region, Output will return database instance identifier name Select encrypted database name that we just created DB-Name-Encrypted.\n\n```bash\naws rds describe-db-instances --region \u003cregion-name\u003e --query 'DBInstances[*].DBInstanceIdentifier'```\n7. Run again `describe-db-instances` command using the RDS instance identifier returned earlier, to determine if the selected database instance is encrypted, The command output should return the encryption status `True`.\n\n```bash\naws rds describe-db-instances --region \u003cregion-name\u003e --db-instance-identifier \u003cDB-Name-Encrypted\u003e --query 'DBInstances[*].StorageEncrypted'```\n","rules":[{"cloudProviders":["aws"],"comparator":"eq","expectedResult":"[]","subjects":["DBInstance"],"query":"aws-1-4-0-storage-3-1-encryption-is-enabled-for-rds-instances","returnPath":""}]}