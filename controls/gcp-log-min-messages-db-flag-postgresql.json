{
  "alertForSecondaryOnly": false,
  "slug": "gcp-log-min-messages-db-flag-postgresql",
  "name": "Ensure the 'log_min_messages' database flag for Cloud SQL PostgreSQL instance is set appropriately",
  "severity": 1,
  "rules": [
    {
      "cloudProviders": [
        "gcp"
      ],
      "comparator": "eq",
      "expectedResult": "[]",
      "subjects": [
        "CloudSQLInstance"
      ],
      "query": "gcp-1-1-0-sql-2-5-the-log-min-message-database-flag-for-cloud-sql-postgresql-instance-is-set"
    }
  ],
  "body": "The `log_min_messages` flag defines the minimum message severity level that is considered as an error statement. Messages for error statements are logged with the SQL statement. Valid values include `DEBUG5`, `DEBUG4`, `DEBUG3`, `DEBUG2`, `DEBUG1`, `INFO`, `NOTICE`, `WARNING`, `ERROR`, LOG, FATAL, and PANIC. Each severity level includes the subsequent levels mentioned above. ERROR is considered the best practice setting. Changes should only be made in accordance with the organization's logging policy.\n\n**Rationale**\n\nAuditing helps in troubleshooting operational problems and also permits forensic analysis. If `log_min_messages` is not set to the correct value, messages may not be classified as error messages appropriately. An organization will need to decide their own threshold for logging `log_min_messages` flag.\n\nThis recommendation is applicable to PostgreSQL database instances.\n\n**Impact**\n\nSetting the threshold too low will might result in increased log storage size and length, making it difficult to find actual errors. Setting the threshold to 'Warning' will log messages for the most needed error messages. Higher severity levels may cause errors needed to troubleshoot to not be logged.\n\nNote: To effectively turn off logging failing statements, set this parameter to PANIC",
  "remediationDescription": "**From Google Cloud Console**\n\n1. Go to the `Cloud SQL Instances` page in the Google Cloud Console by visiting https://console.cloud.google.com/sql/instances\n2. Select the MySQL instance where the database flag needs to be enabled\n3. Click `EDIT`\n4. Scroll down to the `Flags` section\n5. To set a flag that has not been set on the instance before, click `ADD A DATABASE FLAG`, choose the flag `log_min_messages` from the drop-down menu, and set its value to `on`\n6. Click `SAVE`\n7. Confirm the changes under `Flags` on the `Overview` page\n\n**Using Google Cloud CLI**\n\nConfigure the `log_min_messages` database flag for every Cloud SQL PosgreSQL database instance using the below command.\n\n```bash\ngcloud sql instances patch <instanceName> --database-flags log_min_messages=<DEBUG5|DEBUG4|DEBUG3|DEBUG2|DEBUG1|INFO|NOTICE|WARNING|ERROR|LOG|FATAL|PANIC>\n```\n\nNote: This command will overwrite all database flags that were previously set. To keep those and add new ones, include the values for all flags to be set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n**Default Value**\n\nBy default `log_disconnections` is `ERROR`.\n\n**References**\n\n1. [https://cloud.google.com/sql/docs/postgres/flags](https://cloud.google.com/sql/docs/postgres/flags)\n2. [https://www.postgresql.org/docs/9.6/runtime-config-logging.html#RUNTIME-CONFIG-LOGGING-WHAT](https://www.postgresql.org/docs/9.6/runtime-config-logging.html#RUNTIME-CONFIG-LOGGING-WHAT)\n\n**Additional information**\n\nWARNING: This patch modifies database flag values, which may require the instance to be restarted. Check the list of supported flags https://cloud.google.com/sql/docs/mysql/flags - to see if your instance will be restarted when this patch is submitted.\n\nNote: Some database flag settings can affect instance availability or stability, and remove the instance from the Cloud SQL SLA. For information about these flags, see Operational Guidelines.\n\nNote: Configuring the above flag restarts the Cloud SQL instance.",
  "isInsight": false
}